# keyboards/inline_builder.py
from typing import List
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from lang.translator import LocalizedTranslator


# —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
async def inline_builder(buttons: List[dict], translator: LocalizedTranslator) -> InlineKeyboardMarkup:
    inline_keyboard = []
    # TODO: —Å–¥–µ–ª–∞—Ç—å –≤—Å—Ç–∞–≤–∫—É translator –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ –∫–Ω–æ–ø–∫–∏
    for item in buttons:
        if isinstance(item, list):
            row = [InlineKeyboardButton(text='', callback_data='')
                   for button in item]
            inline_keyboard.append(row)
        else:
            button_text = ''
            inline_btn = InlineKeyboardButton(
                text=button_text, callback_data='')
            inline_keyboard.append([inline_btn])
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
async def get_paginated_keyboard(buttons: list[InlineKeyboardButton], page: int, back_callback_data: str, cb_prefix: str, items_per_page: int = 7, r: str = None) -> InlineKeyboardMarkup:
    keyboard_builder = InlineKeyboardBuilder()
    start_index = (page - 1) * items_per_page
    end_index = start_index + items_per_page
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for button in buttons[start_index:end_index]:
        if r == 3:
            keyboard_builder.add(button)
        else:
            keyboard_builder.row(button)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    # –ö–Ω–æ–ø–∫–∞ "prev page", –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if page > 1:
        navigation_buttons.append(InlineKeyboardButton(
            text=f" {page-1} ‚óÄÔ∏è", callback_data=f"page:{cb_prefix}:{page-1}"))
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    navigation_buttons.append(InlineKeyboardButton(
        text="üè°", callback_data=back_callback_data))
    if r in (1, 2):
        navigation_buttons.append(InlineKeyboardButton(
            text="‚úÖ", callback_data="confirm_order"))
    # –ö–Ω–æ–ø–∫–∞ "next page", –µ—Å–ª–∏ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if end_index < len(buttons):
        navigation_buttons.append(InlineKeyboardButton(
            text=f"‚ñ∂Ô∏è {page+1} ", callback_data=f"page:{cb_prefix}:{page+1}"))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard_builder.row(*navigation_buttons)

    return keyboard_builder.as_markup()
